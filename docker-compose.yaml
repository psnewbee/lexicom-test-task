volumes:
  redis_data: { }

services:
  fastapi:
    container_name: api_backend
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --show-error --write-out '%{http_code}' http://localhost:8000/api/healthcheck/ping | grep -q 200"]
      interval: 30s
      timeout: 1s
      start_period: 5s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - app-net

  redis:
    container_name: redis_database
    image: redis:7.0
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --port ${REDIS_PORT} --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    healthcheck:
      test: redis-cli -a ${REDIS_PASSWORD} -p ${REDIS_PORT} ping | grep PONG
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    networks:
      - app-net

networks:
  app-net:
    driver: bridge